const { Tool } = require('langchain/tools');
const axios = require('axios');
const https = require('https');
const http = require('http');

class WordPressJWTAPI extends Tool {
  constructor(fields = {}) {
    super();
    
    this.name = 'wordpress_jwt_api';
    this.description = `WordPress REST API tool with JWT authentication for comprehensive content management.

üéØ –û–ë–Ø–ó–ê–¢–ï–õ–¨–ù–´–ï –§–û–†–ú–ê–¢–´ –ó–ê–ü–†–û–°–û–í:

üìù –°–û–ó–î–ê–ù–ò–ï –ü–û–°–¢–ê:
{"action":"create_post","data":{"title":"–ó–∞–≥–æ–ª–æ–≤–æ–∫ –ø–æ—Å—Ç–∞","content":"–°–æ–¥–µ—Ä–∂–∏–º–æ–µ –ø–æ—Å—Ç–∞","status":"draft"}}

üìÑ –°–û–ó–î–ê–ù–ò–ï –°–¢–†–ê–ù–ò–¶–´:
{"action":"create_page","data":{"title":"–ó–∞–≥–æ–ª–æ–≤–æ–∫ —Å—Ç—Ä–∞–Ω–∏—Ü—ã","content":"–°–æ–¥–µ—Ä–∂–∏–º–æ–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã","status":"draft"}}

üìÇ –°–û–ó–î–ê–ù–ò–ï –ö–ê–¢–ï–ì–û–†–ò–ò:
{"action":"create_category","data":{"name":"–ù–∞–∑–≤–∞–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏","description":"–û–ø–∏—Å–∞–Ω–∏–µ"}}

üí¨ –°–û–ó–î–ê–ù–ò–ï –ö–û–ú–ú–ï–ù–¢–ê–†–ò–Ø:
{"action":"create_comment","data":{"post":123,"content":"–¢–µ–∫—Å—Ç –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è"}}

üìñ –ü–û–õ–£–ß–ï–ù–ò–ï –ü–û–°–¢–û–í (—Å –ø–∞–≥–∏–Ω–∞—Ü–∏–µ–π):
{"action":"get_posts","params":{"per_page":10,"page":1}}

üìÑ –ü–û–õ–£–ß–ï–ù–ò–ï –°–¢–†–ê–ù–ò–¶:
{"action":"get_pages","params":{"per_page":10,"page":1}}

üìÇ –ü–û–õ–£–ß–ï–ù–ò–ï –ö–ê–¢–ï–ì–û–†–ò–ô (—Å –ø–∞–≥–∏–Ω–∞—Ü–∏–µ–π):
{"action":"get_categories","params":{"per_page":20,"page":1}}

‚úèÔ∏è –†–ï–î–ê–ö–¢–ò–†–û–í–ê–ù–ò–ï –ü–û–°–¢–ê:
{"action":"update_post","data":{"id":123,"title":"–ù–æ–≤—ã–π –∑–∞–≥–æ–ª–æ–≤–æ–∫","content":"–ù–æ–≤–æ–µ —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ"}}

‚ö†Ô∏è –ö–†–ò–¢–ò–ß–ï–°–ö–ò –í–ê–ñ–ù–û:
- –í—Å–µ–≥–¥–∞ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ JSON —Ñ–æ—Ä–º–∞—Ç —Å –ø–æ–ª—è–º–∏ "action" –∏ "data"
- –î–ª—è –ø–æ—Å—Ç–æ–≤ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ create_post, –¥–ª—è —Å—Ç—Ä–∞–Ω–∏—Ü - create_page
- –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ params –¥–ª—è –ø–∞–≥–∏–Ω–∞—Ü–∏–∏: {"per_page":20,"page":2}
- –ù–ï –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –µ—Å—Ç–µ—Å—Ç–≤–µ–Ω–Ω—ã–π —è–∑—ã–∫ - —Ç–æ–ª—å–∫–æ JSON!

Available operations: get_posts, create_post, update_post, delete_post, get_pages, create_page, update_page, delete_page, get_categories, create_category, get_comments, create_comment, test_capabilities`;

    // –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ —Å –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–æ–º: fields -> env
    this.apiUrl = fields.WORDPRESS_API_URL || this.getEnvVariable('WORDPRESS_API_URL');
    this.username = fields.WORDPRESS_USERNAME || this.getEnvVariable('WORDPRESS_USERNAME');
    this.password = fields.WORDPRESS_PASSWORD || this.getEnvVariable('WORDPRESS_PASSWORD');

    console.log('WordPress JWT API –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è:');
    console.log('- apiUrl:', this.apiUrl);
    console.log('- username:', this.username);
    console.log('- password:', this.password ? '—É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω' : '–ù–ï –£–°–¢–ê–ù–û–í–õ–ï–ù');

    // –ö–†–ò–¢–ò–ß–ï–°–ö–û–ï –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï: –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ "user_provided"
    if (this.apiUrl === 'user_provided' || this.username === 'user_provided' || this.password === 'user_provided') {
      this.isConfigured = false;
      this.configError = `‚ùå –û–®–ò–ë–ö–ê –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–ò: –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–µ –¥–∞–Ω–Ω—ã–µ –Ω–µ –ø–µ—Ä–µ–¥–∞–Ω—ã –≤ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç.

üîß –†–ï–®–ï–ù–ò–Ø:
1. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –≤—ã –≤–≤–µ–ª–∏ –¥–∞–Ω–Ω—ã–µ –≤ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–µ LibreChat
2. –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç–µ —Å—Ç—Ä–∞–Ω–∏—Ü—É –ø–æ—Å–ª–µ –≤–≤–æ–¥–∞ –¥–∞–Ω–Ω—ã—Ö
3. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å URL (–¥–æ–ª–∂–µ–Ω –±—ã—Ç—å https://yoursite.com)
4. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã –∫–∞–∫ "user_provided"

üí° –¢–ï–ö–£–©–ò–ï –ó–ù–ê–ß–ï–ù–ò–Ø:
- API URL: ${this.apiUrl}
- Username: ${this.username}
- Password: ${this.password ? '—É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω' : '–Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω'}

üìã –¢–†–ï–ë–£–ï–ú–´–ô –§–û–†–ú–ê–¢:
- API URL: https://neuralrunner.ru
- Username: admin_kiu
- Password: –≤–∞—à Application Password`;
      return;
    }

    if (!this.apiUrl || !this.username || !this.password) {
      this.isConfigured = false;
      this.configError = `‚ùå –û–¢–°–£–¢–°–¢–í–£–Æ–¢ –û–ë–Ø–ó–ê–¢–ï–õ–¨–ù–´–ï –ü–û–õ–Ø

üîß –ù–ï–û–ë–•–û–î–ò–ú–û –£–ö–ê–ó–ê–¢–¨:
- WordPress Site URL (–Ω–∞–ø—Ä–∏–º–µ—Ä: https://neuralrunner.ru)
- WordPress Username (–Ω–∞–ø—Ä–∏–º–µ—Ä: admin_kiu)  
- WordPress Password (Application Password)

üí° –ù–∞—Å—Ç—Ä–æ–π—Ç–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç –≤ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–µ LibreChat.`;
      return;
    }

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ URL –≤–∞–ª–∏–¥–Ω—ã–π
    try {
      new URL(this.apiUrl);
    } catch (error) {
      this.isConfigured = false;
      this.configError = `‚ùå –ù–ï–í–ï–†–ù–´–ô URL: ${this.apiUrl}

üîß –ü–†–ê–í–ò–õ–¨–ù–´–ô –§–û–†–ú–ê–¢ URL:
- https://neuralrunner.ru
- https://yoursite.com
- http://localhost:8080

‚ùå –ù–ï–ü–†–ê–í–ò–õ–¨–ù–û:
- neuralrunner.ru (–±–µ–∑ –ø—Ä–æ—Ç–æ–∫–æ–ª–∞)
- user_provided (–Ω–µ –∑–∞–º–µ–Ω–µ–Ω –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–π URL)`;
      return;
    }

    // –£–±–∏—Ä–∞–µ–º trailing slash
    this.apiUrl = this.apiUrl.replace(/\/$/, '');
    
    this.jwtToken = null;
    this.tokenExpiry = null;
    this.refreshThreshold = 60000;
    this.isConfigured = true;
    this.userCapabilities = null; // –ö—ç—à –¥–ª—è capabilities

    console.log('‚úÖ WordPress JWT API —É—Å–ø–µ—à–Ω–æ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω —Å URL:', this.apiUrl);
  }

  getEnvVariable(name) {
    return process.env[name];
  }

  async _call(input) {
    try {
      if (!this.isConfigured) {
        return this.configError;
      }

      console.log('=== –û–ë–†–ê–ë–û–¢–ö–ê –í–•–û–î–ù–´–• –î–ê–ù–ù–´–• ===');
      console.log('–í—Ö–æ–¥–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ:', input);
      
      // –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –ü–†–û–í–ï–†–ö–ê: –æ—Ç–∫–ª–æ–Ω—è–µ–º –µ—Å—Ç–µ—Å—Ç–≤–µ–Ω–Ω—ã–π —è–∑—ã–∫ –±–µ–∑ JSON
      if (!this.isValidJSONInput(input)) {
        return this.getFormatHelp(input);
      }
      
      const parsedInput = this.parseInput(input);
      console.log('–†–∞—Å–ø–∞—Ä—Å–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ:', JSON.stringify(parsedInput, null, 2));
      
      const { action, endpoint, data, params, id } = parsedInput;
      
      // –î–û–ë–ê–í–õ–Ø–ï–ú –û–¢–õ–ê–î–ö–£ –î–ê–ù–ù–´–•
      console.log('=== –§–ò–ù–ê–õ–¨–ù–´–ï –ü–ê–†–ê–ú–ï–¢–†–´ ===');
      console.log('Action (HTTP –º–µ—Ç–æ–¥):', action);
      console.log('Endpoint:', endpoint);
      console.log('Data:', JSON.stringify(data, null, 2));
      console.log('Params:', JSON.stringify(params, null, 2));
      console.log('ID:', id);
      
      // –°–ø–µ—Ü–∏–∞–ª—å–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ –¥–ª—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏—á–µ—Å–∫–∏—Ö –∫–æ–º–∞–Ω–¥
      if (input.includes('test_capabilities') || action === 'test_capabilities') {
        return await this.testCapabilities();
      }
      
      if (input.includes('check_user_capabilities') || action === 'check_user_capabilities') {
        return await this.checkUserCapabilities();
      }

      if (input.includes('test_correct_approach') || action === 'test_correct_approach') {
        return await this.testWithCorrectApproach();
      }
      
      return await this.makeRequest(action, endpoint, data, params, id);
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –≤ _call:', error);
      return `‚ùå –û—à–∏–±–∫–∞: ${error.message}

üîß –í–û–ó–ú–û–ñ–ù–´–ï –ü–†–ò–ß–ò–ù–´:
1. –ù–µ–≤–µ—Ä–Ω—ã–µ —É—á–µ—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ WordPress
2. –ü—Ä–æ–±–ª–µ–º—ã —Å —Å–µ—Ç–µ–≤—ã–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ–º
3. –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–∞—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è JWT –ø–ª–∞–≥–∏–Ω–∞
4. –ù–µ–≤–µ—Ä–Ω—ã–π URL —Å–∞–π—Ç–∞

üí° –ó–∞–ø—É—Å—Ç–∏—Ç–µ –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫—É: {"action":"test_capabilities"}`;
    }
  }

  isValidJSONInput(input) {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –≤—Ö–æ–¥–Ω–æ–π –ø–∞—Ä–∞–º–µ—Ç—Ä –≤–∞–ª–∏–¥–Ω—ã–º JSON —Å action
    try {
      const parsed = JSON.parse(input);
      return parsed.action || parsed.input;
    } catch {
      // –†–∞–∑—Ä–µ—à–∞–µ–º —Ç–æ–ª—å–∫–æ —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏
      const lowerInput = input.toLowerCase();
      return lowerInput.includes('test_capabilities') || 
             lowerInput.includes('check_user_capabilities') ||
             lowerInput.includes('–¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞');
    }
  }

  getFormatHelp(input) {
    const lowerInput = input.toLowerCase();
    
    let suggestion = '';
    if (lowerInput.includes('–ø–æ—Å—Ç') || lowerInput.includes('—Å—Ç–∞—Ç—å—é')) {
      suggestion = `{"action":"create_post","data":{"title":"–ó–∞–≥–æ–ª–æ–≤–æ–∫ –≤–∞—à–µ–≥–æ –ø–æ—Å—Ç–∞","content":"–°–æ–¥–µ—Ä–∂–∏–º–æ–µ –ø–æ—Å—Ç–∞","status":"draft"}}`;
    } else if (lowerInput.includes('—Å—Ç—Ä–∞–Ω–∏—Ü')) {
      suggestion = `{"action":"create_page","data":{"title":"–ó–∞–≥–æ–ª–æ–≤–æ–∫ —Å—Ç—Ä–∞–Ω–∏—Ü—ã","content":"–°–æ–¥–µ—Ä–∂–∏–º–æ–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã","status":"draft"}}`;
    } else if (lowerInput.includes('–∫–∞—Ç–µ–≥–æ—Ä')) {
      suggestion = `{"action":"get_categories","params":{"per_page":20,"page":1}}`;
    } else if (lowerInput.includes('–∫–æ–º–º–µ–Ω—Ç–∞—Ä')) {
      suggestion = `{"action":"create_comment","data":{"post":ID_–ü–û–°–¢–ê,"content":"–¢–µ–∫—Å—Ç –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è"}}`;
    } else {
      suggestion = `{"action":"get_posts","params":{"per_page":10,"page":1}}`;
    }

    return `‚ùå –ù–ï–ü–†–ê–í–ò–õ–¨–ù–´–ô –§–û–†–ú–ê–¢ –ó–ê–ü–†–û–°–ê

üö´ –ü–æ–ª—É—á–µ–Ω: "${input}"

‚úÖ –ò–°–ü–û–õ–¨–ó–£–ô–¢–ï –¢–û–õ–¨–ö–û JSON –§–û–†–ú–ê–¢:

${suggestion}

üìã –î–û–°–¢–£–ü–ù–´–ï –î–ï–ô–°–¢–í–ò–Ø:
- create_post: –°–æ–∑–¥–∞–Ω–∏–µ –ø–æ—Å—Ç–∞
- create_page: –°–æ–∑–¥–∞–Ω–∏–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã  
- get_posts: –ü–æ–ª—É—á–µ–Ω–∏–µ –ø–æ—Å—Ç–æ–≤
- get_pages: –ü–æ–ª—É—á–µ–Ω–∏–µ —Å—Ç—Ä–∞–Ω–∏—Ü
- get_categories: –ü–æ–ª—É—á–µ–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–π (—Å –ø–∞–≥–∏–Ω–∞—Ü–∏–µ–π)
- create_category: –°–æ–∑–¥–∞–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
- create_comment: –°–æ–∑–¥–∞–Ω–∏–µ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è
- update_post: –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ—Å—Ç–∞

üí° –ü–ê–ì–ò–ù–ê–¶–ò–Ø: –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ params: {"per_page":20,"page":2}

‚ö†Ô∏è –í–ê–ñ–ù–û: –ï—Å—Ç–µ—Å—Ç–≤–µ–Ω–Ω—ã–π —è–∑—ã–∫ –ù–ï –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è. –¢–æ–ª—å–∫–æ JSON!`;
  }

  parseInput(input) {
    try {
      // –°–Ω–∞—á–∞–ª–∞ –ø—ã—Ç–∞–µ–º—Å—è —Ä–∞—Å–ø–∞—Ä—Å–∏—Ç—å –∫–∞–∫ JSON
      const parsed = JSON.parse(input);
      
      // –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Ä–∞–∑–Ω—ã–µ —Ñ–æ—Ä–º–∞—Ç—ã JSON –≤—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
      if (parsed.action) {
        // –§–æ—Ä–º–∞—Ç: {"action": "create_post", "data": {...}}
        return {
          action: this.mapActionToMethod(parsed.action),
          endpoint: this.mapActionToEndpoint(parsed.action),
          data: parsed.data || {},
          params: parsed.params || {},
          id: parsed.data?.id || parsed.id || null
        };
      } else if (parsed.input) {
        // –§–æ—Ä–º–∞—Ç: {"input": "create_post", "data": {...}}
        return {
          action: this.mapActionToMethod(parsed.input),
          endpoint: this.mapActionToEndpoint(parsed.input),
          data: parsed.data || {},
          params: parsed.params || {},
          id: parsed.data?.id || parsed.id || null
        };
      } else if (parsed.method && parsed.endpoint) {
        // –§–æ—Ä–º–∞—Ç: {"method": "POST", "endpoint": "/posts", "data": {...}}
        return {
          action: parsed.method || 'GET',
          endpoint: parsed.endpoint || '/posts',
          data: parsed.data || {},
          params: parsed.params || {},
          id: parsed.id || null
        };
      } else {
        // –ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç JSON
        return {
          action: 'GET',
          endpoint: '/posts',
          data: parsed,
          params: {},
          id: null
        };
      }
    } catch {
      // –ï—Å–ª–∏ –Ω–µ JSON, –ø—ã—Ç–∞–µ–º—Å—è –ø–æ–Ω—è—Ç—å –Ω–∞–º–µ—Ä–µ–Ω–∏–µ –∏–∑ —Ç–µ–∫—Å—Ç–∞
      return this.parseTextInput(input);
    }
  }

  // –ò–°–ü–†–ê–í–õ–ï–ù–ù–´–ô –º–∞–ø–ø–∏–Ω–≥ –¥–µ–π—Å—Ç–≤–∏–π –Ω–∞ HTTP –º–µ—Ç–æ–¥—ã
  mapActionToMethod(action) {
    const actionMap = {
      // Posts
      'get_posts': 'GET',
      'list_posts': 'GET',
      'create_post': 'POST',
      'update_post': 'PUT',
      'delete_post': 'DELETE',
      
      // Pages - –ò–°–ü–†–ê–í–õ–ï–ù–û
      'get_pages': 'GET',
      'list_pages': 'GET',
      'create_page': 'POST',
      'update_page': 'PUT',
      'delete_page': 'DELETE',
      
      // Categories
      'get_categories': 'GET',
      'list_categories': 'GET',
      'create_category': 'POST',
      'update_category': 'PUT',
      'delete_category': 'DELETE',
      
      // Tags
      'get_tags': 'GET',
      'list_tags': 'GET',
      'create_tag': 'POST',
      'update_tag': 'PUT',
      'delete_tag': 'DELETE',
      
      // Comments
      'get_comments': 'GET',
      'list_comments': 'GET',
      'create_comment': 'POST',
      'update_comment': 'PUT',
      'delete_comment': 'DELETE',
      
      // Media
      'get_media': 'GET',
      'list_media': 'GET',
      'upload_media': 'POST',
      
      // Users
      'get_users': 'GET',
      'list_users': 'GET',
      'get_current_user': 'GET',
      
      // Diagnostics
      'test_capabilities': 'test_capabilities',
      'check_user_capabilities': 'check_user_capabilities',
      'test_correct_approach': 'test_correct_approach'
    };
    
    console.log(`–ú–∞–ø–ø–∏–Ω–≥ –¥–µ–π—Å—Ç–≤–∏—è "${action}" –≤ –º–µ—Ç–æ–¥:`, actionMap[action] || 'GET');
    return actionMap[action] || 'GET';
  }

  // –ò–°–ü–†–ê–í–õ–ï–ù–ù–´–ô –º–∞–ø–ø–∏–Ω–≥ –¥–µ–π—Å—Ç–≤–∏–π –Ω–∞ —ç–Ω–¥–ø–æ–∏–Ω—Ç—ã
  mapActionToEndpoint(action) {
    const endpointMap = {
      // Posts
      'get_posts': '/posts',
      'list_posts': '/posts',
      'create_post': '/posts',
      'update_post': '/posts',
      'delete_post': '/posts',
      
      // Pages - –ò–°–ü–†–ê–í–õ–ï–ù–û
      'get_pages': '/pages',
      'list_pages': '/pages',
      'create_page': '/pages',
      'update_page': '/pages',
      'delete_page': '/pages',
      
      // Categories
      'get_categories': '/categories',
      'list_categories': '/categories',
      'create_category': '/categories',
      'update_category': '/categories',
      'delete_category': '/categories',
      
      // Tags
      'get_tags': '/tags',
      'list_tags': '/tags',
      'create_tag': '/tags',
      'update_tag': '/tags',
      'delete_tag': '/tags',
      
      // Comments
      'get_comments': '/comments',
      'list_comments': '/comments',
      'create_comment': '/comments',
      'update_comment': '/comments',
      'delete_comment': '/comments',
      
      // Media
      'get_media': '/media',
      'list_media': '/media',
      'upload_media': '/media',
      
      // Users
      'get_users': '/users',
      'list_users': '/users',
      'get_current_user': '/users/me',
      
      // Diagnostics
      'test_capabilities': '',
      'check_user_capabilities': '',
      'test_correct_approach': ''
    };
    
    console.log(`–ú–∞–ø–ø–∏–Ω–≥ –¥–µ–π—Å—Ç–≤–∏—è "${action}" –≤ —ç–Ω–¥–ø–æ–∏–Ω—Ç:`, endpointMap[action] || '/posts');
    return endpointMap[action] || '/posts';
  }

  parseTextInput(input) {
    const lowerInput = input.toLowerCase();
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã
    if (lowerInput.includes('–¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞') || lowerInput.includes('—Ç–µ—Å—Ç') || lowerInput.includes('test_capabilities')) {
      return { action: 'test_capabilities', endpoint: '', data: {}, params: {}, id: null };
    }
    
    if (lowerInput.includes('–ø—Ä–∞–≤–∞') || lowerInput.includes('capabilities')) {
      return { action: 'check_user_capabilities', endpoint: '', data: {}, params: {}, id: null };
    }

    if (lowerInput.includes('correct_approach') || lowerInput.includes('–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –ø–æ–¥—Ö–æ–¥')) {
      return { action: 'test_correct_approach', endpoint: '', data: {}, params: {}, id: null };
    }
    
    // –î–ª—è –≤—Å–µ—Ö –æ—Å—Ç–∞–ª—å–Ω—ã—Ö —Å–ª—É—á–∞–µ–≤ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º GET –∑–∞–ø—Ä–æ—Å
    return { action: 'GET', endpoint: '/posts', data: {}, params: {}, id: null };
  }

  // –£–õ–£–ß–®–ï–ù–ù–ê–Ø –≤–∞–ª–∏–¥–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö
  validatePostData(data) {
    console.log('=== –í–ê–õ–ò–î–ê–¶–ò–Ø –î–ê–ù–ù–´–• –ü–û–°–¢–ê ===');
    console.log('–ü—Ä–æ–≤–µ—Ä—è–µ–º—ã–µ –¥–∞–Ω–Ω—ã–µ:', JSON.stringify(data, null, 2));
    
    if (!data || typeof data !== 'object') {
      throw new Error(`–î–∞–Ω–Ω—ã–µ –ø–æ—Å—Ç–∞ –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –æ–±—ä–µ–∫—Ç–æ–º. 

‚úÖ –ü–†–ê–í–ò–õ–¨–ù–´–ô –§–û–†–ú–ê–¢:
{"action":"create_post","data":{"title":"–ó–∞–≥–æ–ª–æ–≤–æ–∫","content":"–°–æ–¥–µ—Ä–∂–∏–º–æ–µ","status":"draft"}}`);
    }
    
    if (!data.title && !data.content) {
      throw new Error(`–ù–µ–æ–±—Ö–æ–¥–∏–º–æ —É–∫–∞–∑–∞—Ç—å title –∏–ª–∏ content –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –ø–æ—Å—Ç–∞.

‚ùå –û–¢–°–£–¢–°–¢–í–£–Æ–¢ –û–ë–Ø–ó–ê–¢–ï–õ–¨–ù–´–ï –ü–û–õ–Ø:
- title (–∑–∞–≥–æ–ª–æ–≤–æ–∫ –ø–æ—Å—Ç–∞)
- content (—Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –ø–æ—Å—Ç–∞)

‚úÖ –ü–†–ê–í–ò–õ–¨–ù–´–ô –ü–†–ò–ú–ï–†:
{"action":"create_post","data":{"title":"–ú–æ–π –∑–∞–≥–æ–ª–æ–≤–æ–∫","content":"–°–æ–¥–µ—Ä–∂–∏–º–æ–µ –ø–æ—Å—Ç–∞","status":"draft"}}`);
    }
    
    if (data.title !== undefined) {
      if (typeof data.title !== 'string' || data.title.trim().length === 0) {
        throw new Error(`Title –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç–æ–π —Å—Ç—Ä–æ–∫–æ–π.

‚úÖ –ü–†–ê–í–ò–õ–¨–ù–û: "title":"–ó–∞–≥–æ–ª–æ–≤–æ–∫ –ø–æ—Å—Ç–∞"
‚ùå –ù–ï–ü–†–ê–í–ò–õ–¨–ù–û: "title":"" –∏–ª–∏ "title":null`);
      }
    }
    
    if (data.content !== undefined) {
      if (typeof data.content !== 'string' || data.content.trim().length === 0) {
        throw new Error(`Content –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç–æ–π —Å—Ç—Ä–æ–∫–æ–π.

‚úÖ –ü–†–ê–í–ò–õ–¨–ù–û: "content":"–°–æ–¥–µ—Ä–∂–∏–º–æ–µ –ø–æ—Å—Ç–∞"
‚ùå –ù–ï–ü–†–ê–í–ò–õ–¨–ù–û: "content":"" –∏–ª–∏ "content":null`);
      }
    }
    
    console.log('‚úÖ –í–∞–ª–∏–¥–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö –ø–æ—Å—Ç–∞ –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–æ');
    return true;
  }

  // –ù–û–í–ê–Ø –≤–∞–ª–∏–¥–∞—Ü–∏—è –¥–ª—è —Å—Ç—Ä–∞–Ω–∏—Ü
  validatePageData(data) {
    console.log('=== –í–ê–õ–ò–î–ê–¶–ò–Ø –î–ê–ù–ù–´–• –°–¢–†–ê–ù–ò–¶–´ ===');
    console.log('–ü—Ä–æ–≤–µ—Ä—è–µ–º—ã–µ –¥–∞–Ω–Ω—ã–µ:', JSON.stringify(data, null, 2));
    
    if (!data || typeof data !== 'object') {
      throw new Error(`–î–∞–Ω–Ω—ã–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –æ–±—ä–µ–∫—Ç–æ–º.

‚úÖ –ü–†–ê–í–ò–õ–¨–ù–´–ô –§–û–†–ú–ê–¢:
{"action":"create_page","data":{"title":"–ó–∞–≥–æ–ª–æ–≤–æ–∫ —Å—Ç—Ä–∞–Ω–∏—Ü—ã","content":"–°–æ–¥–µ—Ä–∂–∏–º–æ–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã","status":"draft"}}`);
    }
    
    if (!data.title && !data.content) {
      throw new Error(`–ù–µ–æ–±—Ö–æ–¥–∏–º–æ —É–∫–∞–∑–∞—Ç—å title –∏–ª–∏ content –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Å—Ç—Ä–∞–Ω–∏—Ü—ã.

‚ùå –û–¢–°–£–¢–°–¢–í–£–Æ–¢ –û–ë–Ø–ó–ê–¢–ï–õ–¨–ù–´–ï –ü–û–õ–Ø:
- title (–∑–∞–≥–æ–ª–æ–≤–æ–∫ —Å—Ç—Ä–∞–Ω–∏—Ü—ã)
- content (—Å–æ–¥–µ—Ä–∂–∏–º–æ–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã)

‚úÖ –ü–†–ê–í–ò–õ–¨–ù–´–ô –ü–†–ò–ú–ï–†:
{"action":"create_page","data":{"title":"–û –Ω–∞—Å","content":"–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∫–æ–º–ø–∞–Ω–∏–∏","status":"draft"}}`);
    }
    
    console.log('‚úÖ –í–∞–ª–∏–¥–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö —Å—Ç—Ä–∞–Ω–∏—Ü—ã –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–æ');
    return true;
  }

  validateCategoryData(data) {
    console.log('=== –í–ê–õ–ò–î–ê–¶–ò–Ø –î–ê–ù–ù–´–• –ö–ê–¢–ï–ì–û–†–ò–ò ===');
    console.log('–ü—Ä–æ–≤–µ—Ä—è–µ–º—ã–µ –¥–∞–Ω–Ω—ã–µ:', JSON.stringify(data, null, 2));
    
    if (!data || typeof data !== 'object') {
      throw new Error(`–î–∞–Ω–Ω—ã–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –æ–±—ä–µ–∫—Ç–æ–º.

‚úÖ –ü–†–ê–í–ò–õ–¨–ù–´–ô –§–û–†–ú–ê–¢:
{"action":"create_category","data":{"name":"–ù–∞–∑–≤–∞–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏","description":"–û–ø–∏—Å–∞–Ω–∏–µ"}}`);
    }
    
    if (!data.name || typeof data.name !== 'string' || data.name.trim().length === 0) {
      throw new Error(`–ù–µ–æ–±—Ö–æ–¥–∏–º–æ —É–∫–∞–∑–∞—Ç—å –Ω–µ–ø—É—Å—Ç–æ–µ name –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∫–∞—Ç–µ–≥–æ—Ä–∏–∏.

‚ùå –û–¢–°–£–¢–°–¢–í–£–ï–¢ –û–ë–Ø–ó–ê–¢–ï–õ–¨–ù–û–ï –ü–û–õ–ï: name

‚úÖ –ü–†–ê–í–ò–õ–¨–ù–´–ô –ü–†–ò–ú–ï–†:
{"action":"create_category","data":{"name":"–ú–æ—è –∫–∞—Ç–µ–≥–æ—Ä–∏—è","description":"–û–ø–∏—Å–∞–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏"}}`);
    }
    
    console.log('‚úÖ –í–∞–ª–∏–¥–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–æ');
    return true;
  }

  async validateCommentData(data) {
    console.log('=== –í–ê–õ–ò–î–ê–¶–ò–Ø –î–ê–ù–ù–´–• –ö–û–ú–ú–ï–ù–¢–ê–†–ò–Ø ===');
    console.log('–ü—Ä–æ–≤–µ—Ä—è–µ–º—ã–µ –¥–∞–Ω–Ω—ã–µ:', JSON.stringify(data, null, 2));
    
    if (!data || typeof data !== 'object') {
      throw new Error(`–î–∞–Ω–Ω—ã–µ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –æ–±—ä–µ–∫—Ç–æ–º.

‚úÖ –ü–†–ê–í–ò–õ–¨–ù–´–ô –§–û–†–ú–ê–¢:
{"action":"create_comment","data":{"post":123,"content":"–¢–µ–∫—Å—Ç –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è"}}`);
    }
    
    const postId = data.post || data.post_id;
    if (!postId) {
      throw new Error(`–ù–µ–æ–±—Ö–æ–¥–∏–º–æ —É–∫–∞–∑–∞—Ç—å post –∏–ª–∏ post_id –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è.

‚ùå –û–¢–°–£–¢–°–¢–í–£–ï–¢ –û–ë–Ø–ó–ê–¢–ï–õ–¨–ù–û–ï –ü–û–õ–ï: post

‚úÖ –ü–†–ê–í–ò–õ–¨–ù–´–ô –ü–†–ò–ú–ï–†:
{"action":"create_comment","data":{"post":123,"content":"–ú–æ–π –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π"}}`);
    }
    
    if (!data.content || typeof data.content !== 'string' || data.content.trim().length === 0) {
      throw new Error(`–ù–µ–æ–±—Ö–æ–¥–∏–º–æ —É–∫–∞–∑–∞—Ç—å –Ω–µ–ø—É—Å—Ç–æ–π content –¥–ª—è –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è.

‚ùå –û–¢–°–£–¢–°–¢–í–£–ï–¢ –û–ë–Ø–ó–ê–¢–ï–õ–¨–ù–û–ï –ü–û–õ–ï: content

‚úÖ –ü–†–ê–í–ò–õ–¨–ù–´–ô –ü–†–ò–ú–ï–†:
{"action":"create_comment","data":{"post":123,"content":"–ò–Ω—Ç–µ—Ä–µ—Å–Ω–∞—è —Å—Ç–∞—Ç—å—è!"}}`);
    }
    
    // –ù–û–í–û–ï: –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ –ø–æ—Å—Ç–∞ –∏ —Ä–∞–∑—Ä–µ—à–µ–Ω—ã –ª–∏ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏
    console.log(`–ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ—Å—Ç ID ${postId}...`);
    const postCheck = await this.checkPostExists(postId);
    
    if (!postCheck.exists) {
      throw new Error(`–ü–æ—Å—Ç —Å ID ${postId} –Ω–µ –Ω–∞–π–¥–µ–Ω.

üîß –†–ï–®–ï–ù–ò–Ø:
1. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å ID –ø–æ—Å—Ç–∞
2. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ {"action":"get_posts","params":{"per_page":10}} –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –ø–æ—Å—Ç–æ–≤`);
    }
    
    if (postCheck.commentStatus === 'closed') {
      // –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –ø–æ—Å—Ç–æ–≤ —Å –æ—Ç–∫—Ä—ã—Ç—ã–º–∏ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è–º–∏
      const commentablePosts = await this.findCommentablePosts();
      const suggestions = commentablePosts.slice(0, 3).map(post => 
        `ID: ${post.id} - "${post.title}"`
      ).join('\n');
      
      throw new Error(`–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ –∫ –ø–æ—Å—Ç—É "${postCheck.title}" (ID: ${postId}) –∑–∞–∫—Ä—ã—Ç—ã –¥–ª—è –æ–±—Å—É–∂–¥–µ–Ω–∏—è.

üîß –í–´–ë–ï–†–ò–¢–ï –ü–û–°–¢ –° –û–¢–ö–†–´–¢–´–ú–ò –ö–û–ú–ú–ï–ù–¢–ê–†–ò–Ø–ú–ò:

${suggestions}

‚úÖ –ò–°–ü–û–õ–¨–ó–£–ô–¢–ï:
{"action":"create_comment","data":{"post":ID_–ü–û–°–¢–ê,"content":"–í–∞—à –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π"}}`);
    }
    
    console.log('‚úÖ –í–∞–ª–∏–¥–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–æ');
    console.log(`–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ –∫ –ø–æ—Å—Ç—É "${postCheck.title}" —Ä–∞–∑—Ä–µ—à–µ–Ω—ã`);
    return true;
  }

  async checkPostExists(postId) {
    try {
      const token = await this.getJWTToken();
      const response = await axios.get(`${this.apiUrl}/wp-json/wp/v2/posts/${postId}`, {
        headers: {
          'Authorization': `Bearer ${token}`,
          'Accept': 'application/json'
        },
        timeout: 10000,
        httpsAgent: new https.Agent({
          rejectUnauthorized: false,
          keepAlive: true
        }),
        httpAgent: new http.Agent({
          keepAlive: true
        })
      });
      
      return {
        exists: true,
        commentStatus: response.data.comment_status,
        title: response.data.title.rendered
      };
    } catch (error) {
      if (error.response?.status === 404) {
        return { exists: false, error: '–ü–æ—Å—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω' };
      }
      return { exists: false, error: error.message };
    }
  }

  async findCommentablePosts() {
    try {
      const token = await this.getJWTToken();
      const response = await axios.get(`${this.apiUrl}/wp-json/wp/v2/posts`, {
        headers: {
          'Authorization': `Bearer ${token}`,
          'Accept': 'application/json'
        },
        params: {
          per_page: 10,
          comment_status: 'open',
          status: 'publish'
        },
        timeout: 10000,
        httpsAgent: new https.Agent({
          rejectUnauthorized: false,
          keepAlive: true
        }),
        httpAgent: new http.Agent({
          keepAlive: true
        })
      });
      
      return response.data.map(post => ({
        id: post.id,
        title: post.title.rendered,
        link: post.link
      }));
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –ø–æ–∏—Å–∫–∞ –ø–æ—Å—Ç–æ–≤ –¥–ª—è –∫–æ–º–º–µ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:', error);
      return [];
    }
  }

  async getJWTToken() {
    if (!this.isConfigured) {
      throw new Error(this.configError);
    }

    if (this.jwtToken && this.tokenExpiry && 
        (Date.now() + this.refreshThreshold) < this.tokenExpiry) {
      return this.jwtToken;
    }

    try {
      console.log('–ü–æ–ª—É—á–µ–Ω–∏–µ JWT —Ç–æ–∫–µ–Ω–∞ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', this.username);
      
      const authData = {
        username: this.username,
        password: this.password
      };
      
      console.log('–û—Ç–ø—Ä–∞–≤–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ –Ω–∞:', `${this.apiUrl}/wp-json/jwt-auth/v1/token`);
      
      const response = await axios.post(`${this.apiUrl}/wp-json/jwt-auth/v1/token`, authData, {
        timeout: 30000,
        headers: {
          'Content-Type': 'application/json',
          'User-Agent': 'LibreChat-WordPress-API/1.0',
          'Accept': 'application/json'
        },
        httpsAgent: new https.Agent({
          rejectUnauthorized: false,
          keepAlive: true,
          timeout: 30000
        }),
        httpAgent: new http.Agent({
          keepAlive: true,
          timeout: 30000
        })
      });

      if (!response.data || !response.data.token) {
        throw new Error('–¢–æ–∫–µ–Ω –Ω–µ –ø–æ–ª—É—á–µ–Ω –æ—Ç —Å–µ—Ä–≤–µ—Ä–∞');
      }

      this.jwtToken = response.data.token;
      this.tokenExpiry = Date.now() + (6 * 24 * 60 * 60 * 1000);
      
      console.log('JWT —Ç–æ–∫–µ–Ω —É—Å–ø–µ—à–Ω–æ –ø–æ–ª—É—á–µ–Ω');
      console.log('–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:', response.data.user_display_name || response.data.user_nicename);
      
      return this.jwtToken;
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è JWT —Ç–æ–∫–µ–Ω–∞:', error.response?.data || error.message);
      
      if (error.response?.status === 403) {
        throw new Error(`‚ùå –û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏: –Ω–µ–≤–µ—Ä–Ω—ã–µ —É—á–µ—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${this.username}. 

üîß –ü–†–û–í–ï–†–¨–¢–ï:
1. –ü—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å –∏–º–µ–Ω–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: ${this.username}
2. Application Password (–Ω–µ –æ–±—ã—á–Ω—ã–π –ø–∞—Ä–æ–ª—å!)
3. –ê–∫—Ç–∏–≤–Ω–æ—Å—Ç—å JWT –ø–ª–∞–≥–∏–Ω–∞ –Ω–∞ —Å–∞–π—Ç–µ ${this.apiUrl}`);
      }
      
      throw new Error(`‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å JWT —Ç–æ–∫–µ–Ω: ${error.response?.data?.message || error.message}

üîß –í–û–ó–ú–û–ñ–ù–´–ï –ü–†–ò–ß–ò–ù–´:
1. –ù–µ–≤–µ—Ä–Ω—ã–π URL —Å–∞–π—Ç–∞: ${this.apiUrl}
2. JWT –ø–ª–∞–≥–∏–Ω –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –∏–ª–∏ –Ω–µ –∞–∫—Ç–∏–≤–µ–Ω
3. –ü—Ä–æ–±–ª–µ–º—ã —Å —Å–µ—Ç–µ–≤—ã–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ–º
4. –ù–µ–≤–µ—Ä–Ω—ã–µ —É—á–µ—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ`);
    }
  }

  async checkUserCapabilities() {
    try {
      const token = await this.getJWTToken();
      
      console.log('=== –ü–†–û–í–ï–†–ö–ê –ü–†–ê–í –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–Ø (–° CONTEXT=EDIT) ===');
      
      // –ö–†–ò–¢–ò–ß–ï–°–ö–ò –í–ê–ñ–ù–û: –¥–æ–±–∞–≤–ª—è–µ–º context=edit –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è capabilities
      const response = await axios.get(`${this.apiUrl}/wp-json/wp/v2/users/me?context=edit`, {
        headers: {
          'Authorization': `Bearer ${token}`,
          'Content-Type': 'application/json',
          'Accept': 'application/json'
        },
        timeout: 30000,
        httpsAgent: new https.Agent({
          rejectUnauthorized: false,
          keepAlive: true
        }),
        httpAgent: new http.Agent({
          keepAlive: true
        })
      });
      
      const userData = response.data;
      this.userCapabilities = userData.capabilities || {};
      
      console.log('–¢–µ–∫—É—â–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:', userData.name);
      console.log('ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', userData.id);
      console.log('Username:', userData.username);
      console.log('–†–æ–ª–∏:', userData.roles);
      console.log('Capabilities –ø–æ–ª—É—á–µ–Ω—ã:', Object.keys(this.userCapabilities).length > 0);
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–ª—é—á–µ–≤—ã–µ –ø—Ä–∞–≤–∞ –¥–ª—è REST API
      const requiredCaps = {
        'publish_posts': '–ü—É–±–ª–∏–∫–∞—Ü–∏—è –ø–æ—Å—Ç–æ–≤',
        'edit_posts': '–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ—Å—Ç–æ–≤',
        'edit_others_posts': '–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —á—É–∂–∏—Ö –ø–æ—Å—Ç–æ–≤',
        'delete_posts': '–£–¥–∞–ª–µ–Ω–∏–µ –ø–æ—Å—Ç–æ–≤',
        'publish_pages': '–ü—É–±–ª–∏–∫–∞—Ü–∏—è —Å—Ç—Ä–∞–Ω–∏—Ü',
        'edit_pages': '–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å—Ç—Ä–∞–Ω–∏—Ü',
        'manage_categories': '–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º–∏',
        'upload_files': '–ó–∞–≥—Ä—É–∑–∫–∞ —Ñ–∞–π–ª–æ–≤',
        'read': '–ß—Ç–µ–Ω–∏–µ –∫–æ–Ω—Ç–µ–Ω—Ç–∞'
      };
      
      const capabilityReport = [];
      const missingCaps = [];
      
      for (const [cap, description] of Object.entries(requiredCaps)) {
        const hasCap = this.userCapabilities[cap] === true;
        capabilityReport.push(`${hasCap ? '‚úÖ' : '‚ùå'} ${description} (${cap}): ${hasCap ? '–ï–°–¢–¨' : '–ù–ï–¢'}`);
        
        if (!hasCap) {
          missingCaps.push(cap);
        }
      }
      
      console.log('–ü—Ä–æ–≤–µ—Ä–∫–∞ capabilities:');
      capabilityReport.forEach(line => console.log(line));
      
      // –ë–µ–∑–æ–ø–∞—Å–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ —Ä–æ–ª–µ–π
      const roles = Array.isArray(userData.roles) ? userData.roles : [];
      
      if (missingCaps.length > 0) {
        console.error('‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—â–∏–µ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏–µ –ø—Ä–∞–≤–∞:', missingCaps);
        return `‚ùå –ü–†–û–ë–õ–ï–ú–ê –° –ü–†–ê–í–ê–ú–ò –î–û–°–¢–£–ü–ê\n\n–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: ${userData.name}\n–†–æ–ª–∏: ${roles.join(', ')}\n\n–û—Ç—Å—É—Ç—Å—Ç–≤—É—é—â–∏–µ –ø—Ä–∞–≤–∞:\n${missingCaps.map(cap => `- ${requiredCaps[cap]} (${cap})`).join('\n')}\n\nüîß –†–ï–®–ï–ù–ò–ï: –ü—Ä–æ–≤–µ—Ä—å—Ç–µ context=edit –≤ –∑–∞–ø—Ä–æ—Å–µ –∏–ª–∏ –ø—Ä–∞–≤–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ WordPress.`;
      }
      
      return `‚úÖ –ü–†–ê–í–ê –î–û–°–¢–£–ü–ê –í –ü–û–†–Ø–î–ö–ï\n\n–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: ${userData.name}\n–†–æ–ª–∏: ${roles.join(', ')}\n\n–í—Å–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –ø—Ä–∞–≤–∞ –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É—é—Ç:\n${capabilityReport.join('\n')}`;
      
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–∞–≤:', error.response?.data || error.message);
      
      if (error.response?.status === 403) {
        return `‚ùå –û–®–ò–ë–ö–ê –î–û–°–¢–£–ü–ê: –ù–µ —É–¥–∞–µ—Ç—Å—è –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞ –∫ /wp-json/wp/v2/users/me?context=edit`;
      }
      
      return `‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–∞–≤: ${error.response?.data?.message || error.message}`;
    }
  }

  async testWithCorrectApproach() {
    console.log('=== –¢–ï–°–¢ –° –ü–†–ê–í–ò–õ–¨–ù–´–ú –ü–û–î–•–û–î–û–ú ===');
    
    try {
      const token = await this.getJWTToken();
      console.log('‚úÖ –¢–æ–∫–µ–Ω –ø–æ–ª—É—á–µ–Ω');
      
      // –¢–µ—Å—Ç 1: –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å–µ–±–µ —Å context=edit
      const meResponse = await axios.get(`${this.apiUrl}/wp-json/wp/v2/users/me?context=edit`, {
        headers: {
          'Authorization': `Bearer ${token}`,
          'Content-Type': 'application/json',
          'Accept': 'application/json'
        },
        timeout: 30000,
        httpsAgent: new https.Agent({
          rejectUnauthorized: false,
          keepAlive: true
        }),
        httpAgent: new http.Agent({
          keepAlive: true
        })
      });
      
      console.log('=== –î–ê–ù–ù–´–ï –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–Ø ===');
      console.log('ID:', meResponse.data.id);
      console.log('Username:', meResponse.data.username);
      console.log('Name:', meResponse.data.name);
      console.log('–†–æ–ª–∏:', meResponse.data.roles);
      console.log('Capabilities –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É—é—Ç:', !!meResponse.data.capabilities);
      
      let result = `‚úÖ –î–ê–ù–ù–´–ï –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–Ø –ü–û–õ–£–ß–ï–ù–´:\n`;
      result += `ID: ${meResponse.data.id}\n`;
      result += `Username: ${meResponse.data.username}\n`;
      result += `Name: ${meResponse.data.name}\n`;
      result += `–†–æ–ª–∏: ${meResponse.data.roles?.join(', ') || '–Ω–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω—ã'}\n`;
      
      if (meResponse.data.capabilities) {
        console.log('‚úÖ Capabilities –ø–æ–ª—É—á–µ–Ω—ã!');
        console.log('publish_posts:', meResponse.data.capabilities.publish_posts);
        console.log('edit_posts:', meResponse.data.capabilities.edit_posts);
        console.log('publish_pages:', meResponse.data.capabilities.publish_pages);
        console.log('manage_categories:', meResponse.data.capabilities.manage_categories);
        
        result += `\n‚úÖ CAPABILITIES –ü–û–õ–£–ß–ï–ù–´:\n`;
        result += `- publish_posts: ${meResponse.data.capabilities.publish_posts}\n`;
        result += `- edit_posts: ${meResponse.data.capabilities.edit_posts}\n`;
        result += `- publish_pages: ${meResponse.data.capabilities.publish_pages}\n`;
        result += `- manage_categories: ${meResponse.data.capabilities.manage_categories}\n`;
        result += `- upload_files: ${meResponse.data.capabilities.upload_files}\n`;
        
        // –¢–µ—Å—Ç 2: –ü—Ä–æ–±—É–µ–º —Å–æ–∑–¥–∞—Ç—å —á–µ—Ä–Ω–æ–≤–∏–∫ –ø–æ—Å—Ç–∞
        try {
          const draftPost = await axios.post(`${this.apiUrl}/wp-json/wp/v2/posts`, {
            title: 'LibreChat Test Draft Post',
            content: '–¢–µ—Å—Ç–æ–≤—ã–π –ø–æ—Å—Ç –∏–∑ LibreChat —Å –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–º –∫–æ–¥–æ–º',
            status: 'draft'
          }, {
            headers: {
              'Authorization': `Bearer ${token}`,
              'Content-Type': 'application/json',
              'Accept': 'application/json'
            },
            timeout: 30000,
            httpsAgent: new https.Agent({
              rejectUnauthorized: false,
              keepAlive: true
            }),
            httpAgent: new http.Agent({
              keepAlive: true
            })
          });
          
          console.log('‚úÖ –ß–µ—Ä–Ω–æ–≤–∏–∫ –ø–æ—Å—Ç–∞ —Å–æ–∑–¥–∞–Ω! ID:', draftPost.data.id);
          result += `\n‚úÖ –¢–ï–°–¢ –°–û–ó–î–ê–ù–ò–Ø –ü–û–°–¢–ê –£–°–ü–ï–®–ï–ù!\n`;
          result += `ID —Å–æ–∑–¥–∞–Ω–Ω–æ–≥–æ –ø–æ—Å—Ç–∞: ${draftPost.data.id}\n`;
          result += `–ó–∞–≥–æ–ª–æ–≤–æ–∫: ${draftPost.data.title.rendered}\n`;
          result += `–°—Ç–∞—Ç—É—Å: ${draftPost.data.status}\n`;
          
        } catch (createError) {
          console.error('‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –ø–æ—Å—Ç–∞:', createError.response?.data);
          result += `\n‚ùå –û–®–ò–ë–ö–ê –°–û–ó–î–ê–ù–ò–Ø –ü–û–°–¢–ê:\n`;
          result += `${createError.response?.data?.message || createError.message}\n`;
        }

        // –¢–µ—Å—Ç 3: –ü—Ä–æ–±—É–µ–º —Å–æ–∑–¥–∞—Ç—å —á–µ—Ä–Ω–æ–≤–∏–∫ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
        try {
          const draftPage = await axios.post(`${this.apiUrl}/wp-json/wp/v2/pages`, {
            title: 'LibreChat Test Draft Page',
            content: '–¢–µ—Å—Ç–æ–≤–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –∏–∑ LibreChat —Å –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–º –∫–æ–¥–æ–º',
            status: 'draft'
          }, {
            headers: {
              'Authorization': `Bearer ${token}`,
              'Content-Type': 'application/json',
              'Accept': 'application/json'
            },
            timeout: 30000,
            httpsAgent: new https.Agent({
              rejectUnauthorized: false,
              keepAlive: true
            }),
            httpAgent: new http.Agent({
              keepAlive: true
            })
          });
          
          console.log('‚úÖ –ß–µ—Ä–Ω–æ–≤–∏–∫ —Å—Ç—Ä–∞–Ω–∏—Ü—ã —Å–æ–∑–¥–∞–Ω! ID:', draftPage.data.id);
          result += `\n‚úÖ –¢–ï–°–¢ –°–û–ó–î–ê–ù–ò–Ø –°–¢–†–ê–ù–ò–¶–´ –£–°–ü–ï–®–ï–ù!\n`;
          result += `ID —Å–æ–∑–¥–∞–Ω–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã: ${draftPage.data.id}\n`;
          result += `–ó–∞–≥–æ–ª–æ–≤–æ–∫: ${draftPage.data.title.rendered}\n`;
          result += `–°—Ç–∞—Ç—É—Å: ${draftPage.data.status}\n`;
          
        } catch (createError) {
          console.error('‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Å—Ç—Ä–∞–Ω–∏—Ü—ã:', createError.response?.data);
          result += `\n‚ùå –û–®–ò–ë–ö–ê –°–û–ó–î–ê–ù–ò–Ø –°–¢–†–ê–ù–ò–¶–´:\n`;
          result += `${createError.response?.data?.message || createError.message}\n`;
        }
        
      } else {
        result += `\n‚ùå Capabilities –ù–ï –ø–æ–ª—É—á–µ–Ω—ã - –ø—Ä–æ–±–ª–µ–º–∞ —Å context=edit\n`;
      }
      
      return result;
      
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∞:', error.response?.status, error.response?.data);
      return `‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∞: ${error.response?.data?.message || error.message}`;
    }
  }

  async testCapabilities() {
    console.log('=== –ü–û–õ–ù–ê–Ø –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê WORDPRESS JWT API ===');
    
    const results = [];
    
    try {
      // 1. –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–ª—É—á–µ–Ω–∏–µ —Ç–æ–∫–µ–Ω–∞
      results.push('üîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–ª—É—á–µ–Ω–∏—è JWT —Ç–æ–∫–µ–Ω–∞...');
      const token = await this.getJWTToken();
      results.push('‚úÖ JWT —Ç–æ–∫–µ–Ω –ø–æ–ª—É—á–µ–Ω —É—Å–ø–µ—à–Ω–æ');
      
      // 2. –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∞–≤–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (–∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è)
      results.push('\nüîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∞–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (—Å context=edit)...');
      const capResult = await this.checkUserCapabilities();
      results.push(capResult);
      
      // 3. –¢–µ—Å—Ç–∏—Ä—É–µ–º GET –∑–∞–ø—Ä–æ—Å
      results.push('\nüîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ GET –∑–∞–ø—Ä–æ—Å–∞...');
      const getPosts = await this.makeRequest('GET', '/posts', {}, { per_page: 1 });
      results.push('‚úÖ GET –∑–∞–ø—Ä–æ—Å —Ä–∞–±–æ—Ç–∞–µ—Ç');
      
      // 4. –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å–æ–∑–¥–∞–Ω–∏–µ —á–µ—Ä–Ω–æ–≤–∏–∫–∞ (–µ—Å–ª–∏ –µ—Å—Ç—å –ø—Ä–∞–≤–∞)
      if (this.userCapabilities && this.userCapabilities['edit_posts']) {
        results.push('\nüîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–∑–¥–∞–Ω–∏—è —á–µ—Ä–Ω–æ–≤–∏–∫–∞ –ø–æ—Å—Ç–∞...');
        try {
          const testPost = await this.makeRequest('POST', '/posts', {
            title: '–¢–µ—Å—Ç–æ–≤—ã–π –ø–æ—Å—Ç –æ—Ç LibreChat',
            content: '–≠—Ç–æ—Ç –ø–æ—Å—Ç —Å–æ–∑–¥–∞–Ω –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è API. –ú–æ–∂–Ω–æ —É–¥–∞–ª–∏—Ç—å.',
            status: 'draft'
          });
          results.push('‚úÖ –°–æ–∑–¥–∞–Ω–∏–µ —á–µ—Ä–Ω–æ–≤–∏–∫–∞ –ø–æ—Å—Ç–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç');
        } catch (createError) {
          results.push(`‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –ø–æ—Å—Ç–∞: ${createError.message}`);
        }
      } else {
        results.push('\n‚ö†Ô∏è –ü—Ä–æ–ø—É—Å–∫ —Ç–µ—Å—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è –ø–æ—Å—Ç–∞ - –Ω–µ—Ç –ø—Ä–∞–≤ edit_posts');
      }

      // 5. –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å–æ–∑–¥–∞–Ω–∏–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã (–µ—Å–ª–∏ –µ—Å—Ç—å –ø—Ä–∞–≤–∞)
      if (this.userCapabilities && this.userCapabilities['edit_pages']) {
        results.push('\nüîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–∑–¥–∞–Ω–∏—è —á–µ—Ä–Ω–æ–≤–∏–∫–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã...');
        try {
          const testPage = await this.makeRequest('POST', '/pages', {
            title: '–¢–µ—Å—Ç–æ–≤–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –æ—Ç LibreChat',
            content: '–≠—Ç–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–∞ —Å–æ–∑–¥–∞–Ω–∞ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è API. –ú–æ–∂–Ω–æ —É–¥–∞–ª–∏—Ç—å.',
            status: 'draft'
          });
          results.push('‚úÖ –°–æ–∑–¥–∞–Ω–∏–µ —á–µ—Ä–Ω–æ–≤–∏–∫–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã —Ä–∞–±–æ—Ç–∞–µ—Ç');
        } catch (createError) {
          results.push(`‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Å—Ç—Ä–∞–Ω–∏—Ü—ã: ${createError.message}`);
        }
      } else {
        results.push('\n‚ö†Ô∏è –ü—Ä–æ–ø—É—Å–∫ —Ç–µ—Å—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Å—Ç—Ä–∞–Ω–∏—Ü—ã - –Ω–µ—Ç –ø—Ä–∞–≤ edit_pages');
      }
      
      results.push('\n=== –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê –ó–ê–í–ï–†–®–ï–ù–ê ===');
      return results.join('\n');
      
    } catch (error) {
      results.push(`‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏: ${error.message}`);
      return results.join('\n');
    }
  }

  async makeRequest(method, endpoint, data = {}, params = {}, id = null) {
    if (!this.isConfigured) {
      throw new Error(this.configError);
    }

    // –ö–†–ò–¢–ò–ß–ï–°–ö–û–ï –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï: –í–∞–ª–∏–¥–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö –ø–µ—Ä–µ–¥ –æ—Ç–ø—Ä–∞–≤–∫–æ–π
    try {
      if (method === 'POST' && endpoint === '/posts') {
        this.validatePostData(data);
      } else if (method === 'POST' && endpoint === '/pages') {
        this.validatePageData(data);
      } else if (method === 'POST' && endpoint === '/categories') {
        this.validateCategoryData(data);
      } else if (method === 'POST' && endpoint === '/comments') {
        await this.validateCommentData(data);
      }
    } catch (validationError) {
      return `‚ùå –û—à–∏–±–∫–∞ –≤–∞–ª–∏–¥–∞—Ü–∏–∏: ${validationError.message}`;
    }

    const token = await this.getJWTToken();
    
    let url = `${this.apiUrl}/wp-json/wp/v2${endpoint}`;
    
    // –ü—Ä–∞–≤–∏–ª—å–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ ID –¥–ª—è —Ä–∞–∑–Ω—ã—Ö –º–µ—Ç–æ–¥–æ–≤
    if (method === 'PUT' || method === 'DELETE') {
      if (id) {
        url += `/${id}`;
      } else if (data.id) {
        url += `/${data.id}`;
        // –£–¥–∞–ª—è–µ–º ID –∏–∑ –¥–∞–Ω–Ω—ã—Ö, —Ç–∞–∫ –∫–∞–∫ –æ–Ω —É–∂–µ –≤ URL
        const { id: removedId, ...dataWithoutId } = data;
        data = dataWithoutId;
      }
    } else if (method === 'GET' && id) {
      url += `/${id}`;
    }

    // –°–ø–µ—Ü–∏–∞–ª—å–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ –¥–ª—è –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤
    if (endpoint === '/comments' && data.post_id) {
      data.post = data.post_id;
      delete data.post_id;
    }

    // –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï: –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–Ω–∞—á–µ–Ω–∏—è –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é –¥–ª—è –ø–∞–≥–∏–Ω–∞—Ü–∏–∏
    if (method === 'GET' && Object.keys(params).length === 0) {
      // –î–ª—è –∫–∞—Ç–µ–≥–æ—Ä–∏–π —É–≤–µ–ª–∏—á–∏–≤–∞–µ–º –ª–∏–º–∏—Ç –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
      if (endpoint === '/categories') {
        params.per_page = 50; // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –±–æ–ª—å—à–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–π
      } else {
        params.per_page = 10; // –î–ª—è –æ—Å—Ç–∞–ª—å–Ω—ã—Ö —Ç–∏–ø–æ–≤ –∫–æ–Ω—Ç–µ–Ω—Ç–∞
      }
    }

    const config = {
      method,
      url,
      headers: {
        'Authorization': `Bearer ${token}`,
        'Content-Type': 'application/json',
        'User-Agent': 'LibreChat-WordPress-API/1.0',
        'Accept': 'application/json'
      },
      params,
      timeout: 30000,
      httpsAgent: new https.Agent({
        rejectUnauthorized: false,
        keepAlive: true,
        timeout: 30000
      }),
      httpAgent: new http.Agent({
        keepAlive: true,
        timeout: 30000
      })
    };

    if (method !== 'GET' && method !== 'DELETE' && Object.keys(data).length > 0) {
      config.data = data;
    }

    try {
      console.log(`–û—Ç–ø—Ä–∞–≤–ª—è–µ–º ${method} –∑–∞–ø—Ä–æ—Å –∫: ${url}`);
      console.log('–ü–∞—Ä–∞–º–µ—Ç—Ä—ã:', JSON.stringify(params, null, 2));
      if (Object.keys(data).length > 0) {
        console.log('–î–∞–Ω–Ω—ã–µ:', JSON.stringify(data, null, 2));
      }
      
      const response = await axios(config);
      console.log('–ó–∞–ø—Ä–æ—Å –≤—ã–ø–æ–ª–Ω–µ–Ω —É—Å–ø–µ—à–Ω–æ, —Å—Ç–∞—Ç—É—Å:', response.status);
      
      return this.formatResponse(response.data, method, endpoint, id, response.headers);
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞:', error.response?.status, error.response?.data);
      
      if (error.response?.status === 401) {
        console.log('–¢–æ–∫–µ–Ω –∏—Å—Ç–µ–∫, –ø–æ–ª—É—á–∞–µ–º –Ω–æ–≤—ã–π...');
        this.jwtToken = null;
        this.tokenExpiry = null;
        
        try {
          const newToken = await this.getJWTToken();
          config.headers['Authorization'] = `Bearer ${newToken}`;
          const retryResponse = await axios(config);
          return this.formatResponse(retryResponse.data, method, endpoint, id, retryResponse.headers);
        } catch (retryError) {
          return `–û—à–∏–±–∫–∞ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏: ${retryError.message}`;
        }
      }

      if (error.response?.status === 403) {
        const errorData = error.response.data;
        
        if (errorData.code === 'rest_cannot_create') {
          return `‚ùå –û–®–ò–ë–ö–ê –ü–†–ê–í –î–û–°–¢–£–ü–ê: –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å "${this.username}" –Ω–µ –º–æ–∂–µ—Ç —Å–æ–∑–¥–∞–≤–∞—Ç—å –∫–æ–Ω—Ç–µ–Ω—Ç.

üîß –ü–†–û–í–ï–†–¨–¢–ï:
1. –†–æ–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ WordPress (–¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å Administrator/Editor)
2. Application Password –∞–∫—Ç–∏–≤–µ–Ω –∏ –∫–æ—Ä—Ä–µ–∫—Ç–µ–Ω
3. JWT –ø–ª–∞–≥–∏–Ω –Ω–∞—Å—Ç—Ä–æ–µ–Ω –ø—Ä–∞–≤–∏–ª—å–Ω–æ

üí° –ó–∞–ø—É—Å—Ç–∏—Ç–µ –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫—É: "test_capabilities"`;
        }
        
        if (errorData.code === 'rest_comment_closed') {
          const commentablePosts = await this.findCommentablePosts();
          const suggestions = commentablePosts.slice(0, 3).map(post => 
            `ID: ${post.id} - "${post.title}"`
          ).join('\n');
          
          return `‚ùå –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ –∫ —ç—Ç–æ–º—É –ø–æ—Å—Ç—É –∑–∞–∫—Ä—ã—Ç—ã –¥–ª—è –æ–±—Å—É–∂–¥–µ–Ω–∏—è.

üîß –í–´–ë–ï–†–ò–¢–ï –ü–û–°–¢ –° –û–¢–ö–†–´–¢–´–ú–ò –ö–û–ú–ú–ï–ù–¢–ê–†–ò–Ø–ú–ò:

${suggestions}

‚úÖ –ò–°–ü–û–õ–¨–ó–£–ô–¢–ï:
{"action":"create_comment","data":{"post":ID_–ü–û–°–¢–ê,"content":"–í–∞—à –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π"}}`;
        }
        
        if (errorData.code === 'rest_forbidden') {
          return `‚ùå –î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â–µ–Ω: ${errorData.message}

üîß –í–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–∏—á–∏–Ω—ã:
- –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤ –¥–ª—è –æ–ø–µ—Ä–∞—Ü–∏–∏ ${method} ${endpoint}
- –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –º–æ–∂–µ—Ç —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å —ç—Ç–æ—Ç –∫–æ–Ω—Ç–µ–Ω—Ç
- –ü—Ä–æ–±–ª–µ–º—ã —Å –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏ WordPress`;
        }
        
        if (errorData.code === 'rest_cannot_edit') {
          return `‚ùå –ù–µ–ª—å–∑—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å: ${errorData.message}

üîß –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–∞ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —ç—Ç–æ–≥–æ —Ç–∏–ø–∞ –∫–æ–Ω—Ç–µ–Ω—Ç–∞.`;
        }
        
        return `‚ùå –û—à–∏–±–∫–∞ 403: ${errorData.message || '–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤'}

–ö–æ–¥ –æ—à–∏–±–∫–∏: ${errorData.code || '–Ω–µ–∏–∑–≤–µ—Å—Ç–µ–Ω'}
–ó–∞–ø—É—Å—Ç–∏—Ç–µ "test_capabilities" –¥–ª—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏.`;
      }
      
      if (error.response?.status === 400) {
        const errorData = error.response.data;
        return `‚ùå –û—à–∏–±–∫–∞ 400: ${errorData.message || '–ù–µ–≤–µ—Ä–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –∑–∞–ø—Ä–æ—Å–∞'}

–ö–æ–¥: ${errorData.code || '–Ω–µ–∏–∑–≤–µ—Å—Ç–µ–Ω'}
–î–∞–Ω–Ω—ã–µ: ${JSON.stringify(errorData.data || {}, null, 2)}

üîß –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å –ø–µ—Ä–µ–¥–∞–≤–∞–µ–º—ã—Ö –¥–∞–Ω–Ω—ã—Ö.`;
      }
      
      if (error.response?.status === 404) {
        return `‚ùå –û—à–∏–±–∫–∞ 404: –≠–Ω–¥–ø–æ–∏–Ω—Ç ${endpoint} –Ω–µ –Ω–∞–π–¥–µ–Ω –∏–ª–∏ –º–µ—Ç–æ–¥ ${method} –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è.

üîß –ü—Ä–æ–≤–µ—Ä—å—Ç–µ:
- –ü—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å URL —ç–Ω–¥–ø–æ–∏–Ω—Ç–∞
- –ü–æ–¥–¥–µ—Ä–∂–∫—É –º–µ—Ç–æ–¥–∞ ${method} –¥–ª—è ${endpoint}
- –ê–∫—Ç–∏–≤–Ω–æ—Å—Ç—å WordPress REST API`;
      }
      
      if (error.response) {
        const errorData = error.response.data;
        return `‚ùå WordPress API –û—à–∏–±–∫–∞ ${error.response.status}: ${errorData.message || error.response.statusText}

–ö–æ–¥: ${errorData.code || '–Ω–µ–∏–∑–≤–µ—Å—Ç–µ–Ω'}
–î–∞–Ω–Ω—ã–µ: ${JSON.stringify(errorData.data || {}, null, 2)}`;
      }

      return `‚ùå –°–µ—Ç–µ–≤–∞—è –æ—à–∏–±–∫–∞: ${error.message}

üîß –ü—Ä–æ–≤–µ—Ä—å—Ç–µ:
- –î–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å —Å–∞–π—Ç–∞ ${this.apiUrl}
- –ò–Ω—Ç–µ—Ä–Ω–µ—Ç —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ
- –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Ñ–∞–π—Ä–≤–æ–ª–∞`;
    }
  }

  // –ò–°–ü–†–ê–í–õ–ï–ù–ù–´–ô formatResponse —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π –ø–∞–≥–∏–Ω–∞—Ü–∏–∏
  formatResponse(data, method, endpoint, id, headers = {}) {
    if (Array.isArray(data)) {
      const itemType = this.getItemType(endpoint);
      
      // –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–∞–≥–∏–Ω–∞—Ü–∏–∏ –∏–∑ –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤
      const totalItems = headers['x-wp-total'] ? parseInt(headers['x-wp-total']) : data.length;
      const totalPages = headers['x-wp-totalpages'] ? parseInt(headers['x-wp-totalpages']) : 1;
      
      // –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï: –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –≤—Å–µ —ç–ª–µ–º–µ–Ω—Ç—ã, –∞ –Ω–µ —Ç–æ–ª—å–∫–æ –ø–µ—Ä–≤—ã–µ 5
      const displayLimit = Math.min(data.length, 20); // –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º –ª–∏–º–∏—Ç –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
      const items = data.slice(0, displayLimit).map(item => ({
        id: item.id,
        title: item.title?.rendered || item.name || '–ë–µ–∑ –Ω–∞–∑–≤–∞–Ω–∏—è',
        status: item.status || '–Ω–µ–∏–∑–≤–µ—Å—Ç–µ–Ω',
        date: item.date || item.date_gmt || '–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–∞',
        type: item.type || '–Ω–µ–∏–∑–≤–µ—Å—Ç–µ–Ω'
      }));

      let result = `–ù–∞–π–¥–µ–Ω–æ ${totalItems} ${itemType}. –ü–æ–∫–∞–∑—ã–≤–∞—é ${displayLimit} –∏–∑ ${data.length} –Ω–∞ —Ç–µ–∫—É—â–µ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ:\n\n`;
      
      result += items.map(item => {
        let itemInfo = `ID: ${item.id}\n–ù–∞–∑–≤–∞–Ω–∏–µ: ${item.title}\n–°—Ç–∞—Ç—É—Å: ${item.status}`;
        if (item.type && item.type !== '–Ω–µ–∏–∑–≤–µ—Å—Ç–µ–Ω') {
          itemInfo += `\n–¢–∏–ø: ${item.type}`;
        }
        itemInfo += `\n–î–∞—Ç–∞: ${item.date}\n`;
        return itemInfo;
      }).join('\n');

      // –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–∞–≥–∏–Ω–∞—Ü–∏–∏
      if (totalPages > 1) {
        result += `\nüìÑ –ü–ê–ì–ò–ù–ê–¶–ò–Ø:\n`;
        result += `–í—Å–µ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–æ–≤: ${totalItems}\n`;
        result += `–í—Å–µ–≥–æ —Å—Ç—Ä–∞–Ω–∏—Ü: ${totalPages}\n`;
        result += `\nüí° –î–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –¥—Ä—É–≥–∏—Ö —Å—Ç—Ä–∞–Ω–∏—Ü –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ:\n`;
        result += `{"action":"${this.getActionFromEndpoint(endpoint)}","params":{"per_page":20,"page":2}}`;
      }

      return result;
    }

    if (method === 'POST') {
      const itemType = this.getItemType(endpoint);
      return `‚úÖ –£—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω –Ω–æ–≤—ã–π ${itemType}!\nID: ${data.id}\n–ù–∞–∑–≤–∞–Ω–∏–µ: ${data.title?.rendered || data.name || '–ë–µ–∑ –Ω–∞–∑–≤–∞–Ω–∏—è'}\n–°—Ç–∞—Ç—É—Å: ${data.status || '–Ω–µ–∏–∑–≤–µ—Å—Ç–µ–Ω'}\n–¢–∏–ø: ${data.type || '–Ω–µ–∏–∑–≤–µ—Å—Ç–µ–Ω'}\n–°—Å—ã–ª–∫–∞: ${data.link || '–Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞'}`;
    }

    if (method === 'PUT') {
      const itemType = this.getItemType(endpoint);
      return `‚úÖ –£—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω ${itemType}!\nID: ${data.id}\n–ù–∞–∑–≤–∞–Ω–∏–µ: ${data.title?.rendered || data.name || '–ë–µ–∑ –Ω–∞–∑–≤–∞–Ω–∏—è'}\n–°—Ç–∞—Ç—É—Å: ${data.status || '–Ω–µ–∏–∑–≤–µ—Å—Ç–µ–Ω'}\n–¢–∏–ø: ${data.type || '–Ω–µ–∏–∑–≤–µ—Å—Ç–µ–Ω'}\n–ü–æ—Å–ª–µ–¥–Ω–µ–µ –∏–∑–º–µ–Ω–µ–Ω–∏–µ: ${data.modified || '–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ'}`;
    }

    if (method === 'DELETE') {
      return `‚úÖ –≠–ª–µ–º–µ–Ω—Ç —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω.`;
    }

    if (data.id) {
      const itemType = this.getItemType(endpoint);
      return `${itemType} ID: ${data.id}\n–ù–∞–∑–≤–∞–Ω–∏–µ: ${data.title?.rendered || data.name || '–ë–µ–∑ –Ω–∞–∑–≤–∞–Ω–∏—è'}\n–°—Ç–∞—Ç—É—Å: ${data.status || '–Ω–µ–∏–∑–≤–µ—Å—Ç–µ–Ω'}\n–¢–∏–ø: ${data.type || '–Ω–µ–∏–∑–≤–µ—Å—Ç–µ–Ω'}\n–î–∞—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è: ${data.date || '–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–∞'}\n–ü–æ—Å–ª–µ–¥–Ω–µ–µ –∏–∑–º–µ–Ω–µ–Ω–∏–µ: ${data.modified || '–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ'}\n–°—Å—ã–ª–∫–∞: ${data.link || '–Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞'}`;
    }

    return JSON.stringify(data, null, 2);
  }

  getActionFromEndpoint(endpoint) {
    const actionMap = {
      '/posts': 'get_posts',
      '/pages': 'get_pages',
      '/categories': 'get_categories',
      '/tags': 'get_tags',
      '/comments': 'get_comments',
      '/media': 'get_media',
      '/users': 'get_users'
    };
    return actionMap[endpoint] || 'get_posts';
  }

  getItemType(endpoint) {
    const types = {
      '/posts': '–ø–æ—Å—Ç',
      '/pages': '—Å—Ç—Ä–∞–Ω–∏—Ü–∞', 
      '/categories': '–∫–∞—Ç–µ–≥–æ—Ä–∏—è',
      '/tags': '—Ç–µ–≥',
      '/users': '–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å',
      '/media': '–º–µ–¥–∏–∞—Ñ–∞–π–ª',
      '/comments': '–∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π'
    };
    return types[endpoint] || '—ç–ª–µ–º–µ–Ω—Ç';
  }
}

module.exports = WordPressJWTAPI;
